// 1.類型聲明
// 規定，變數只有賦值後才能使用，否則就會報錯。
let a: number;
console.log(a); // 报错
// 變數沒有賦值就被讀取，導致報錯。
// 而JavaScript 允許這種行為，不會報錯

// 2.類型推斷:
// 類型聲明是可選的，可以加，也可以不加
// 即使不加型別聲明，還是有效的TypeScript
// JavaScript 程式碼都是合法的TypeScript 程式碼

// 3.編譯:
// TypeScript 的類型檢查只是編譯時的類型檢查
// 一旦程式碼編譯為JavaScript，執行時間就不再檢查類型了。

// 4.值與類型
// 務必牢記:TypeScript 程式碼只涉及類型，不涉及值。所有跟「值」相關的處理，都由JavaScript
// 編譯過程，其實就是把「類型程式碼」全部拿掉，只保留「值碼」